// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
    binaryTargets = ["native", "linux-musl-openssl-3.0.x"]

}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  STUDENT
  ADMIN
}


model Student {
  id         String  @id @default(uuid())
  name       String
  email      String  @unique
  password   String
  department Department @relation(fields: [departmentId], references: [id])
  departmentId String
  role       Role    @default(STUDENT)
  grade      String
  coursesTaken CourseTaken[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Department {
  id        String   @id @default(uuid())
  name      String   @unique
  students  Student[]
  courses   Course[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Course {
  id          String   @id @default(uuid())
  name        String
  code        String   @unique
  department  Department @relation(fields: [departmentId], references: [id])
  departmentId String
  students    CourseTaken[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model CourseTaken {
  id          String   @id @default(uuid())
  student     Student  @relation(fields: [studentId], references: [id])
  studentId   String
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    String
  status      Status   @default(IN_PROGRESS)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

enum Status {
  COMPLETED
  IN_PROGRESS
}